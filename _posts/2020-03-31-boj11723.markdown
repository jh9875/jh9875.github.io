---
layout: post
title:  "[Baejoon] 11723번: 집합"
date:   2020-03-31
categories: PROBLEM_SOLVING
permalink: /archivers/boj11723
tags: [brute_force]
---

## 문제

비어있는 공집합 S가 주어졌을 때, 아래 연산을 수행하는 프로그램을 작성하시오.   

- add x: S에 x를 추가한다. (1 ≤ x ≤ 20) S에 x가 이미 있는 경우에는 연산을 무시한다.
- remove x: S에서 x를 제거한다. (1 ≤ x ≤ 20) S에 x가 없는 경우에는 연산을 무시한다.
- check x: S에 x가 있으면 1을, 없으면 0을 출력한다. (1 ≤ x ≤ 20)
- toggle x: S에 x가 있으면 x를 제거하고, 없으면 x를 추가한다. (1 ≤ x ≤ 20)
- all: S를 {1, 2, ..., 20} 으로 바꾼다.
- empty: S를 공집합으로 바꾼다.

입력의 첫줄엔 연산의 수 M이 주어지고, 그 다음 M개의 줄에는 연산이 주어진다.   

문제 링크 : <https://www.acmicpc.net/problem/11723>   

## 풀이

처음 집합을 어떤 자료구조로 하면 좋을지 생각했다.   

가장 먼저 생각난 것은 ArrayList였다.   

연산을 추가, 삭제, 확인 할 수 있어서 이게 적당하겠다고 생각했다.   

그러다 문뜩 집합엔 중복된 원소가 없다는 것을 깨달았다.   

그래서 boolean배열을 이용하면 괜찮겠다고 생각했다.   

배열의 크기도 21개면 되고, 추가, 삭제, 확인도 간단하다.   

all, empty명령어도 자바의 Arrays.fill명령어를 사용하면 간단하다.   

코드는 아래와 같다.   

~~~java
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main
{
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		String cmd;
		int M, data;
		boolean[] set =new boolean[21];
		
		M =Integer.parseInt(br.readLine());
		while(M-- >0)
		{
			st =new StringTokenizer(br.readLine());
			cmd =st.nextToken();
			if(cmd.equals("add"))
			{
				data =Integer.parseInt(st.nextToken());
				set[data] =true;
			}else if(cmd.equals("remove"))
			{
				data =Integer.parseInt(st.nextToken());
				set[data] =false;
			}else if(cmd.equals("check"))
			{
				data =Integer.parseInt(st.nextToken());
				if(set[data])
					bw.write(1 +"\n");
				else
					bw.write(0 +"\n");
			}else if(cmd.equals("toggle"))
			{
				data =Integer.parseInt(st.nextToken());
				if(set[data])
					set[data] =false;
				else
					set[data] =true;
			}else if(cmd.equals("all"))
			{
				Arrays.fill(set, true);
			}else if(cmd.equals("empty"))
			{
				Arrays.fill(set, false);
			}
		}
		bw.flush();
	}
}
~~~

