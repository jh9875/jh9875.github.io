---
layout: post
title:  "[Baekjoon] 11727번: 2xn 타일링 2"
date:   2020-04-08
categories: PROBLEM_SOLVING
permalink: /archivers/boj11727
tags: [dp]
---

## 문제

2xn크기의 직사각형을 1x2, 2x1, 2x2크기의 타일로 채우는 방법의 수를 구하는
프로그램을 작성하는 문제이다.   

문제의 출력은 방법의 수를 10001로 나눈 나머지를 출력해야한다.   

문제 링크 : <https://www.acmicpc.net/problem/11727>   

## 풀이

2xn 타일링 문제에서 2x2로 채울 수 있는 방법이 늘어났다.   

이것도 비슷하게 처리해 주면 된다.   

문제를 해결하는 함수는 다음과 같다.   

~~~java
static int tiling(int width)
{
	if(cache[width] !=-1)
		return cache[width];
	if(width <2)
		return 1;
	int ret =0;
	ret =tiling(width-1)%MOD +tiling(width-2)%MOD +tiling(width-2)%MOD;
	return cache[width] =ret%MOD;
}
~~~

위에서 tiling함수의 반환값은 방법의 수이다.   

함수의 파라미터 width는 채워야 하는 타일의 가로길이이다.   

그러므로 처음 함수의 호출을 tiling(n)으로 한다.   

위 cache가 의미하는 것은 이미 계산된 값인지 확인하는 것이다.   

처음 cache배열을 -1로 초기화 해서 남은 가로길이가 width일때 계산된 값이면 바로 반환하고,
아니면 계산을 해서 cache에 넣어둔다.   

2xn크기의 타일을 채우는 방법의 수는 3가지가 있다.   

- 2x1크기의 타일로 가로 1칸을 채우는 방법
- 1x2크기의 타일 2개로 가로 2칸을 채우는 방법
- 2x2크기의 타일 1개로 가로 2칸을 채우는 방법

위 3가지를 이용해서 줄여나가면서 가로의 너비 n을 모두 채우면 1을 반환해서 경우의 수 1가지를 만들어 주면 된다.   


~~~java
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;

public class Main
{
	static final int MOD =10007;
	static int[] cache;
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		int n, ans;
		cache =new int[1001];
		Arrays.fill(cache, -1);
		
		n =Integer.parseInt(br.readLine());
		ans =tiling(n)%MOD;
		bw.write(ans +"\n");
		bw.flush();
	}
	static int tiling(int width)
	{
		if(cache[width] !=-1)
			return cache[width];
		if(width <2)
			return 1;
		int ret =0;
		ret =tiling(width-1)%MOD +tiling(width-2)%MOD +tiling(width-2)%MOD;
		return cache[width] =ret%MOD;
	}
}
~~~

  